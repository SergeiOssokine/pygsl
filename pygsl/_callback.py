# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.6
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('__callback', [dirname(__file__)])
        except ImportError:
            import __callback
            return __callback
        if fp is not None:
            try:
                _mod = imp.load_module('__callback', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    __callback = swig_import_helper()
    del swig_import_helper
else:
    import __callback
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def gsl_function_init(STORE):
    return __callback.gsl_function_init(STORE)
gsl_function_init = __callback.gsl_function_init

def gsl_function_init_fdf(STORE):
    return __callback.gsl_function_init_fdf(STORE)
gsl_function_init_fdf = __callback.gsl_function_init_fdf

def gsl_function_free(FREE):
    return __callback.gsl_function_free(FREE)
gsl_function_free = __callback.gsl_function_free

def gsl_function_free_fdf(FREE):
    return __callback.gsl_function_free_fdf(FREE)
gsl_function_free_fdf = __callback.gsl_function_free_fdf

def gsl_monte_function_init(STORE):
    return __callback.gsl_monte_function_init(STORE)
gsl_monte_function_init = __callback.gsl_monte_function_init

def gsl_monte_function_free(FREE):
    return __callback.gsl_monte_function_free(FREE)
gsl_monte_function_free = __callback.gsl_monte_function_free

def gsl_monte_plain_integrate(BUFFER, xl, calls, r, state):
    return __callback.gsl_monte_plain_integrate(BUFFER, xl, calls, r, state)
gsl_monte_plain_integrate = __callback.gsl_monte_plain_integrate

def gsl_monte_plain_alloc(dim):
    return __callback.gsl_monte_plain_alloc(dim)
gsl_monte_plain_alloc = __callback.gsl_monte_plain_alloc

def gsl_monte_plain_init(state):
    return __callback.gsl_monte_plain_init(state)
gsl_monte_plain_init = __callback.gsl_monte_plain_init

def gsl_monte_plain_free(state):
    return __callback.gsl_monte_plain_free(state)
gsl_monte_plain_free = __callback.gsl_monte_plain_free

def pygsl_monte_miser_get_min_calls(s):
    return __callback.pygsl_monte_miser_get_min_calls(s)
pygsl_monte_miser_get_min_calls = __callback.pygsl_monte_miser_get_min_calls

def pygsl_monte_miser_get_min_calls_per_bisection(s):
    return __callback.pygsl_monte_miser_get_min_calls_per_bisection(s)
pygsl_monte_miser_get_min_calls_per_bisection = __callback.pygsl_monte_miser_get_min_calls_per_bisection

def pygsl_monte_miser_get_dither(s):
    return __callback.pygsl_monte_miser_get_dither(s)
pygsl_monte_miser_get_dither = __callback.pygsl_monte_miser_get_dither

def pygsl_monte_miser_get_estimate_frac(s):
    return __callback.pygsl_monte_miser_get_estimate_frac(s)
pygsl_monte_miser_get_estimate_frac = __callback.pygsl_monte_miser_get_estimate_frac

def pygsl_monte_miser_get_alpha(s):
    return __callback.pygsl_monte_miser_get_alpha(s)
pygsl_monte_miser_get_alpha = __callback.pygsl_monte_miser_get_alpha

def pygsl_monte_miser_set_min_calls(s, NONNEGATIVE):
    return __callback.pygsl_monte_miser_set_min_calls(s, NONNEGATIVE)
pygsl_monte_miser_set_min_calls = __callback.pygsl_monte_miser_set_min_calls

def pygsl_monte_miser_set_min_calls_per_bisection(s, NONNEGATIVE):
    return __callback.pygsl_monte_miser_set_min_calls_per_bisection(s, NONNEGATIVE)
pygsl_monte_miser_set_min_calls_per_bisection = __callback.pygsl_monte_miser_set_min_calls_per_bisection

def pygsl_monte_miser_set_dither(s, d):
    return __callback.pygsl_monte_miser_set_dither(s, d)
pygsl_monte_miser_set_dither = __callback.pygsl_monte_miser_set_dither

def pygsl_monte_miser_set_estimate_frac(s, e):
    return __callback.pygsl_monte_miser_set_estimate_frac(s, e)
pygsl_monte_miser_set_estimate_frac = __callback.pygsl_monte_miser_set_estimate_frac

def pygsl_monte_miser_set_alpha(s, alpha):
    return __callback.pygsl_monte_miser_set_alpha(s, alpha)
pygsl_monte_miser_set_alpha = __callback.pygsl_monte_miser_set_alpha

def gsl_monte_miser_integrate(BUFFER, xl, calls, r, state):
    return __callback.gsl_monte_miser_integrate(BUFFER, xl, calls, r, state)
gsl_monte_miser_integrate = __callback.gsl_monte_miser_integrate

def gsl_monte_miser_alloc(dim):
    return __callback.gsl_monte_miser_alloc(dim)
gsl_monte_miser_alloc = __callback.gsl_monte_miser_alloc

def gsl_monte_miser_init(state):
    return __callback.gsl_monte_miser_init(state)
gsl_monte_miser_init = __callback.gsl_monte_miser_init

def gsl_monte_miser_free(state):
    return __callback.gsl_monte_miser_free(state)
gsl_monte_miser_free = __callback.gsl_monte_miser_free

__callback.GSL_VEGAS_MODE_IMPORTANCE_swigconstant(__callback)
GSL_VEGAS_MODE_IMPORTANCE = __callback.GSL_VEGAS_MODE_IMPORTANCE

__callback.GSL_VEGAS_MODE_IMPORTANCE_ONLY_swigconstant(__callback)
GSL_VEGAS_MODE_IMPORTANCE_ONLY = __callback.GSL_VEGAS_MODE_IMPORTANCE_ONLY

__callback.GSL_VEGAS_MODE_STRATIFIED_swigconstant(__callback)
GSL_VEGAS_MODE_STRATIFIED = __callback.GSL_VEGAS_MODE_STRATIFIED

def pygsl_monte_vegas_get_result(s):
    return __callback.pygsl_monte_vegas_get_result(s)
pygsl_monte_vegas_get_result = __callback.pygsl_monte_vegas_get_result

def pygsl_monte_vegas_get_sigma(s):
    return __callback.pygsl_monte_vegas_get_sigma(s)
pygsl_monte_vegas_get_sigma = __callback.pygsl_monte_vegas_get_sigma

def pygsl_monte_vegas_get_chisq(s):
    return __callback.pygsl_monte_vegas_get_chisq(s)
pygsl_monte_vegas_get_chisq = __callback.pygsl_monte_vegas_get_chisq

def pygsl_monte_vegas_get_alpha(s):
    return __callback.pygsl_monte_vegas_get_alpha(s)
pygsl_monte_vegas_get_alpha = __callback.pygsl_monte_vegas_get_alpha

def pygsl_monte_vegas_get_iterations(s):
    return __callback.pygsl_monte_vegas_get_iterations(s)
pygsl_monte_vegas_get_iterations = __callback.pygsl_monte_vegas_get_iterations

def pygsl_monte_vegas_get_stage(s):
    return __callback.pygsl_monte_vegas_get_stage(s)
pygsl_monte_vegas_get_stage = __callback.pygsl_monte_vegas_get_stage

def pygsl_monte_vegas_get_mode(s):
    return __callback.pygsl_monte_vegas_get_mode(s)
pygsl_monte_vegas_get_mode = __callback.pygsl_monte_vegas_get_mode

def pygsl_monte_vegas_get_verbose(s):
    return __callback.pygsl_monte_vegas_get_verbose(s)
pygsl_monte_vegas_get_verbose = __callback.pygsl_monte_vegas_get_verbose

def pygsl_monte_vegas_get_ostream(s):
    return __callback.pygsl_monte_vegas_get_ostream(s)
pygsl_monte_vegas_get_ostream = __callback.pygsl_monte_vegas_get_ostream

def pygsl_monte_vegas_set_result(s, v):
    return __callback.pygsl_monte_vegas_set_result(s, v)
pygsl_monte_vegas_set_result = __callback.pygsl_monte_vegas_set_result

def pygsl_monte_vegas_set_sigma(s, v):
    return __callback.pygsl_monte_vegas_set_sigma(s, v)
pygsl_monte_vegas_set_sigma = __callback.pygsl_monte_vegas_set_sigma

def pygsl_monte_vegas_set_chisq(s, v):
    return __callback.pygsl_monte_vegas_set_chisq(s, v)
pygsl_monte_vegas_set_chisq = __callback.pygsl_monte_vegas_set_chisq

def pygsl_monte_vegas_set_alpha(s, v):
    return __callback.pygsl_monte_vegas_set_alpha(s, v)
pygsl_monte_vegas_set_alpha = __callback.pygsl_monte_vegas_set_alpha

def pygsl_monte_vegas_set_iterations(s, NONNEGATIVE):
    return __callback.pygsl_monte_vegas_set_iterations(s, NONNEGATIVE)
pygsl_monte_vegas_set_iterations = __callback.pygsl_monte_vegas_set_iterations

def pygsl_monte_vegas_set_stage(s, NONNEGATIVE):
    return __callback.pygsl_monte_vegas_set_stage(s, NONNEGATIVE)
pygsl_monte_vegas_set_stage = __callback.pygsl_monte_vegas_set_stage

def pygsl_monte_vegas_set_mode(s, v):
    return __callback.pygsl_monte_vegas_set_mode(s, v)
pygsl_monte_vegas_set_mode = __callback.pygsl_monte_vegas_set_mode

def pygsl_monte_vegas_set_verbose(s, v):
    return __callback.pygsl_monte_vegas_set_verbose(s, v)
pygsl_monte_vegas_set_verbose = __callback.pygsl_monte_vegas_set_verbose

def pygsl_monte_vegas_set_ostream(s, v):
    return __callback.pygsl_monte_vegas_set_ostream(s, v)
pygsl_monte_vegas_set_ostream = __callback.pygsl_monte_vegas_set_ostream

def gsl_monte_vegas_integrate(BUFFER, xl, calls, r, state):
    return __callback.gsl_monte_vegas_integrate(BUFFER, xl, calls, r, state)
gsl_monte_vegas_integrate = __callback.gsl_monte_vegas_integrate

def gsl_monte_vegas_alloc(dim):
    return __callback.gsl_monte_vegas_alloc(dim)
gsl_monte_vegas_alloc = __callback.gsl_monte_vegas_alloc

def gsl_monte_vegas_init(state):
    return __callback.gsl_monte_vegas_init(state)
gsl_monte_vegas_init = __callback.gsl_monte_vegas_init

def gsl_monte_vegas_free(state):
    return __callback.gsl_monte_vegas_free(state)
gsl_monte_vegas_free = __callback.gsl_monte_vegas_free

def gsl_root_fsolver_alloc(T):
    return __callback.gsl_root_fsolver_alloc(T)
gsl_root_fsolver_alloc = __callback.gsl_root_fsolver_alloc

def gsl_root_fsolver_free(s):
    return __callback.gsl_root_fsolver_free(s)
gsl_root_fsolver_free = __callback.gsl_root_fsolver_free

def gsl_root_fdfsolver_alloc(T):
    return __callback.gsl_root_fdfsolver_alloc(T)
gsl_root_fdfsolver_alloc = __callback.gsl_root_fdfsolver_alloc

def gsl_root_fdfsolver_free(s):
    return __callback.gsl_root_fdfsolver_free(s)
gsl_root_fdfsolver_free = __callback.gsl_root_fdfsolver_free

def gsl_root_fsolver_set(s, BUFFER, X_LOWER, X_UPPER):
    return __callback.gsl_root_fsolver_set(s, BUFFER, X_LOWER, X_UPPER)
gsl_root_fsolver_set = __callback.gsl_root_fsolver_set

def gsl_root_fdfsolver_set(s, BUFFER, ROOT):
    return __callback.gsl_root_fdfsolver_set(s, BUFFER, ROOT)
gsl_root_fdfsolver_set = __callback.gsl_root_fdfsolver_set

def gsl_root_fsolver_name(S):
    return __callback.gsl_root_fsolver_name(S)
gsl_root_fsolver_name = __callback.gsl_root_fsolver_name

def gsl_root_fdfsolver_name(S):
    return __callback.gsl_root_fdfsolver_name(S)
gsl_root_fdfsolver_name = __callback.gsl_root_fdfsolver_name

def gsl_root_fsolver_iterate(BUFFER):
    return __callback.gsl_root_fsolver_iterate(BUFFER)
gsl_root_fsolver_iterate = __callback.gsl_root_fsolver_iterate

def gsl_root_fdfsolver_iterate(BUFFER):
    return __callback.gsl_root_fdfsolver_iterate(BUFFER)
gsl_root_fdfsolver_iterate = __callback.gsl_root_fdfsolver_iterate

def gsl_root_fsolver_root(S):
    return __callback.gsl_root_fsolver_root(S)
gsl_root_fsolver_root = __callback.gsl_root_fsolver_root

def gsl_root_fdfsolver_root(S):
    return __callback.gsl_root_fdfsolver_root(S)
gsl_root_fdfsolver_root = __callback.gsl_root_fdfsolver_root

def gsl_root_fsolver_x_lower(S):
    return __callback.gsl_root_fsolver_x_lower(S)
gsl_root_fsolver_x_lower = __callback.gsl_root_fsolver_x_lower

def gsl_root_fsolver_x_upper(S):
    return __callback.gsl_root_fsolver_x_upper(S)
gsl_root_fsolver_x_upper = __callback.gsl_root_fsolver_x_upper

def gsl_root_test_interval(X_LOWER, X_UPPER, EPSABS, EPSREL):
    return __callback.gsl_root_test_interval(X_LOWER, X_UPPER, EPSABS, EPSREL)
gsl_root_test_interval = __callback.gsl_root_test_interval

def gsl_root_test_delta(X1, X0, EPSREL, EPSABS):
    return __callback.gsl_root_test_delta(X1, X0, EPSREL, EPSABS)
gsl_root_test_delta = __callback.gsl_root_test_delta

def gsl_root_test_residual(F, EPSABS):
    return __callback.gsl_root_test_residual(F, EPSABS)
gsl_root_test_residual = __callback.gsl_root_test_residual

def gsl_min_fminimizer_alloc(T):
    return __callback.gsl_min_fminimizer_alloc(T)
gsl_min_fminimizer_alloc = __callback.gsl_min_fminimizer_alloc

def gsl_min_fminimizer_set(s, BUFFER, X_MINIMUM, X_LOWER, X_UPPER):
    return __callback.gsl_min_fminimizer_set(s, BUFFER, X_MINIMUM, X_LOWER, X_UPPER)
gsl_min_fminimizer_set = __callback.gsl_min_fminimizer_set

def gsl_min_fminimizer_set_with_values(s, BUFFER, X_MINIMUM, F_MINIMUM, X_LOWER, F_LOWER, X_UPPER, F_UPPER):
    return __callback.gsl_min_fminimizer_set_with_values(s, BUFFER, X_MINIMUM, F_MINIMUM, X_LOWER, F_LOWER, X_UPPER, F_UPPER)
gsl_min_fminimizer_set_with_values = __callback.gsl_min_fminimizer_set_with_values

def gsl_min_fminimizer_free(S):
    return __callback.gsl_min_fminimizer_free(S)
gsl_min_fminimizer_free = __callback.gsl_min_fminimizer_free

def gsl_min_fminimizer_name(S):
    return __callback.gsl_min_fminimizer_name(S)
gsl_min_fminimizer_name = __callback.gsl_min_fminimizer_name

def gsl_min_fminimizer_iterate(BUFFER):
    return __callback.gsl_min_fminimizer_iterate(BUFFER)
gsl_min_fminimizer_iterate = __callback.gsl_min_fminimizer_iterate

def gsl_min_fminimizer_minimum(S):
    return __callback.gsl_min_fminimizer_minimum(S)
gsl_min_fminimizer_minimum = __callback.gsl_min_fminimizer_minimum

def gsl_min_fminimizer_x_upper(S):
    return __callback.gsl_min_fminimizer_x_upper(S)
gsl_min_fminimizer_x_upper = __callback.gsl_min_fminimizer_x_upper

def gsl_min_fminimizer_x_lower(S):
    return __callback.gsl_min_fminimizer_x_lower(S)
gsl_min_fminimizer_x_lower = __callback.gsl_min_fminimizer_x_lower

def gsl_min_test_interval(X_LOWER, X_UPPER, EPSABS, EPSREL):
    return __callback.gsl_min_test_interval(X_LOWER, X_UPPER, EPSABS, EPSREL)
gsl_min_test_interval = __callback.gsl_min_test_interval

def gsl_multiroot_function_init(STORE):
    return __callback.gsl_multiroot_function_init(STORE)
gsl_multiroot_function_init = __callback.gsl_multiroot_function_init

def gsl_multiroot_function_init_fdf(STORE):
    return __callback.gsl_multiroot_function_init_fdf(STORE)
gsl_multiroot_function_init_fdf = __callback.gsl_multiroot_function_init_fdf

def gsl_multiroot_function_getf(s):
    return __callback.gsl_multiroot_function_getf(s)
gsl_multiroot_function_getf = __callback.gsl_multiroot_function_getf

def gsl_multiroot_function_fdf_getf(s):
    return __callback.gsl_multiroot_function_fdf_getf(s)
gsl_multiroot_function_fdf_getf = __callback.gsl_multiroot_function_fdf_getf

def gsl_multiroot_function_getx(s):
    return __callback.gsl_multiroot_function_getx(s)
gsl_multiroot_function_getx = __callback.gsl_multiroot_function_getx

def gsl_multiroot_function_fdf_getx(s):
    return __callback.gsl_multiroot_function_fdf_getx(s)
gsl_multiroot_function_fdf_getx = __callback.gsl_multiroot_function_fdf_getx

def gsl_multiroot_function_free(FREE):
    return __callback.gsl_multiroot_function_free(FREE)
gsl_multiroot_function_free = __callback.gsl_multiroot_function_free

def gsl_multiroot_function_free_fdf(FREE):
    return __callback.gsl_multiroot_function_free_fdf(FREE)
gsl_multiroot_function_free_fdf = __callback.gsl_multiroot_function_free_fdf

def gsl_multiroot_fsolver_alloc(T, n):
    return __callback.gsl_multiroot_fsolver_alloc(T, n)
gsl_multiroot_fsolver_alloc = __callback.gsl_multiroot_fsolver_alloc

def gsl_multiroot_fsolver_free(s):
    return __callback.gsl_multiroot_fsolver_free(s)
gsl_multiroot_fsolver_free = __callback.gsl_multiroot_fsolver_free

def gsl_multiroot_fsolver_set(s, f, IN):
    return __callback.gsl_multiroot_fsolver_set(s, f, IN)
gsl_multiroot_fsolver_set = __callback.gsl_multiroot_fsolver_set

def gsl_multiroot_fsolver_iterate(s):
    return __callback.gsl_multiroot_fsolver_iterate(s)
gsl_multiroot_fsolver_iterate = __callback.gsl_multiroot_fsolver_iterate

def gsl_multiroot_fsolver_name(s):
    return __callback.gsl_multiroot_fsolver_name(s)
gsl_multiroot_fsolver_name = __callback.gsl_multiroot_fsolver_name

def gsl_multiroot_fsolver_root(s):
    return __callback.gsl_multiroot_fsolver_root(s)
gsl_multiroot_fsolver_root = __callback.gsl_multiroot_fsolver_root

def gsl_multiroot_fdfsolver_alloc(T, n):
    return __callback.gsl_multiroot_fdfsolver_alloc(T, n)
gsl_multiroot_fdfsolver_alloc = __callback.gsl_multiroot_fdfsolver_alloc

def gsl_multiroot_fdfsolver_set(s, fdf, IN):
    return __callback.gsl_multiroot_fdfsolver_set(s, fdf, IN)
gsl_multiroot_fdfsolver_set = __callback.gsl_multiroot_fdfsolver_set

def gsl_multiroot_fdfsolver_iterate(s):
    return __callback.gsl_multiroot_fdfsolver_iterate(s)
gsl_multiroot_fdfsolver_iterate = __callback.gsl_multiroot_fdfsolver_iterate

def gsl_multiroot_fdfsolver_free(s):
    return __callback.gsl_multiroot_fdfsolver_free(s)
gsl_multiroot_fdfsolver_free = __callback.gsl_multiroot_fdfsolver_free

def gsl_multiroot_fdfsolver_name(s):
    return __callback.gsl_multiroot_fdfsolver_name(s)
gsl_multiroot_fdfsolver_name = __callback.gsl_multiroot_fdfsolver_name

def gsl_multiroot_fdfsolver_root(s):
    return __callback.gsl_multiroot_fdfsolver_root(s)
gsl_multiroot_fdfsolver_root = __callback.gsl_multiroot_fdfsolver_root

def gsl_multiroot_test_delta(dx, x, epsabs, epsrel):
    return __callback.gsl_multiroot_test_delta(dx, x, epsabs, epsrel)
gsl_multiroot_test_delta = __callback.gsl_multiroot_test_delta

def gsl_multiroot_test_residual(IN, epsabs):
    return __callback.gsl_multiroot_test_residual(IN, epsabs)
gsl_multiroot_test_residual = __callback.gsl_multiroot_test_residual

def gsl_multimin_function_init(STORE):
    return __callback.gsl_multimin_function_init(STORE)
gsl_multimin_function_init = __callback.gsl_multimin_function_init

def gsl_multimin_function_init_fdf(STORE):
    return __callback.gsl_multimin_function_init_fdf(STORE)
gsl_multimin_function_init_fdf = __callback.gsl_multimin_function_init_fdf

def gsl_multimin_function_free(FREE):
    return __callback.gsl_multimin_function_free(FREE)
gsl_multimin_function_free = __callback.gsl_multimin_function_free

def gsl_multimin_function_free_fdf(FREE):
    return __callback.gsl_multimin_function_free_fdf(FREE)
gsl_multimin_function_free_fdf = __callback.gsl_multimin_function_free_fdf

def gsl_multimin_fminimizer_f(s):
    return __callback.gsl_multimin_fminimizer_f(s)
gsl_multimin_fminimizer_f = __callback.gsl_multimin_fminimizer_f

def gsl_multimin_fminimizer_alloc(T, n):
    return __callback.gsl_multimin_fminimizer_alloc(T, n)
gsl_multimin_fminimizer_alloc = __callback.gsl_multimin_fminimizer_alloc

def gsl_multimin_fminimizer_set(s, BUFFER, x, step_size):
    return __callback.gsl_multimin_fminimizer_set(s, BUFFER, x, step_size)
gsl_multimin_fminimizer_set = __callback.gsl_multimin_fminimizer_set

def gsl_multimin_fminimizer_free(s):
    return __callback.gsl_multimin_fminimizer_free(s)
gsl_multimin_fminimizer_free = __callback.gsl_multimin_fminimizer_free

def gsl_multimin_fminimizer_name(s):
    return __callback.gsl_multimin_fminimizer_name(s)
gsl_multimin_fminimizer_name = __callback.gsl_multimin_fminimizer_name

def gsl_multimin_fminimizer_iterate(s):
    return __callback.gsl_multimin_fminimizer_iterate(s)
gsl_multimin_fminimizer_iterate = __callback.gsl_multimin_fminimizer_iterate

def gsl_multimin_fminimizer_x(s):
    return __callback.gsl_multimin_fminimizer_x(s)
gsl_multimin_fminimizer_x = __callback.gsl_multimin_fminimizer_x

def gsl_multimin_fminimizer_minimum(s):
    return __callback.gsl_multimin_fminimizer_minimum(s)
gsl_multimin_fminimizer_minimum = __callback.gsl_multimin_fminimizer_minimum

def gsl_multimin_fminimizer_size(s):
    return __callback.gsl_multimin_fminimizer_size(s)
gsl_multimin_fminimizer_size = __callback.gsl_multimin_fminimizer_size

def gsl_multimin_fdfminimizer_alloc(T, n):
    return __callback.gsl_multimin_fdfminimizer_alloc(T, n)
gsl_multimin_fdfminimizer_alloc = __callback.gsl_multimin_fdfminimizer_alloc

def gsl_multimin_fdfminimizer_set(s, BUFFER, IN, step_size, tol):
    return __callback.gsl_multimin_fdfminimizer_set(s, BUFFER, IN, step_size, tol)
gsl_multimin_fdfminimizer_set = __callback.gsl_multimin_fdfminimizer_set

def gsl_multimin_fdfminimizer_free(s):
    return __callback.gsl_multimin_fdfminimizer_free(s)
gsl_multimin_fdfminimizer_free = __callback.gsl_multimin_fdfminimizer_free

def gsl_multimin_fdfminimizer_name(s):
    return __callback.gsl_multimin_fdfminimizer_name(s)
gsl_multimin_fdfminimizer_name = __callback.gsl_multimin_fdfminimizer_name

def gsl_multimin_fdfminimizer_iterate(BUFFER):
    return __callback.gsl_multimin_fdfminimizer_iterate(BUFFER)
gsl_multimin_fdfminimizer_iterate = __callback.gsl_multimin_fdfminimizer_iterate

def gsl_multimin_fdfminimizer_restart(BUFFER):
    return __callback.gsl_multimin_fdfminimizer_restart(BUFFER)
gsl_multimin_fdfminimizer_restart = __callback.gsl_multimin_fdfminimizer_restart

def gsl_multimin_test_gradient(IN, epsabs):
    return __callback.gsl_multimin_test_gradient(IN, epsabs)
gsl_multimin_test_gradient = __callback.gsl_multimin_test_gradient

def gsl_multimin_test_size(size, epsabs):
    return __callback.gsl_multimin_test_size(size, epsabs)
gsl_multimin_test_size = __callback.gsl_multimin_test_size

def gsl_multimin_fdfminimizer_f(s):
    return __callback.gsl_multimin_fdfminimizer_f(s)
gsl_multimin_fdfminimizer_f = __callback.gsl_multimin_fdfminimizer_f

def gsl_multimin_fdfminimizer_x(s):
    return __callback.gsl_multimin_fdfminimizer_x(s)
gsl_multimin_fdfminimizer_x = __callback.gsl_multimin_fdfminimizer_x

def gsl_multimin_fdfminimizer_dx(s):
    return __callback.gsl_multimin_fdfminimizer_dx(s)
gsl_multimin_fdfminimizer_dx = __callback.gsl_multimin_fdfminimizer_dx

def gsl_multimin_fdfminimizer_gradient(s):
    return __callback.gsl_multimin_fdfminimizer_gradient(s)
gsl_multimin_fdfminimizer_gradient = __callback.gsl_multimin_fdfminimizer_gradient

def gsl_multimin_fdfminimizer_minimum(s):
    return __callback.gsl_multimin_fdfminimizer_minimum(s)
gsl_multimin_fdfminimizer_minimum = __callback.gsl_multimin_fdfminimizer_minimum

def gsl_multifit_function_init(STORE):
    return __callback.gsl_multifit_function_init(STORE)
gsl_multifit_function_init = __callback.gsl_multifit_function_init

def gsl_multifit_function_init_fdf(STORE):
    return __callback.gsl_multifit_function_init_fdf(STORE)
gsl_multifit_function_init_fdf = __callback.gsl_multifit_function_init_fdf

def gsl_multifit_fsolver_getdx(s):
    return __callback.gsl_multifit_fsolver_getdx(s)
gsl_multifit_fsolver_getdx = __callback.gsl_multifit_fsolver_getdx

def gsl_multifit_fsolver_getx(s):
    return __callback.gsl_multifit_fsolver_getx(s)
gsl_multifit_fsolver_getx = __callback.gsl_multifit_fsolver_getx

def gsl_multifit_fsolver_getf(s):
    return __callback.gsl_multifit_fsolver_getf(s)
gsl_multifit_fsolver_getf = __callback.gsl_multifit_fsolver_getf

def gsl_multifit_fdfsolver_getdx(s):
    return __callback.gsl_multifit_fdfsolver_getdx(s)
gsl_multifit_fdfsolver_getdx = __callback.gsl_multifit_fdfsolver_getdx

def gsl_multifit_fdfsolver_getx(s):
    return __callback.gsl_multifit_fdfsolver_getx(s)
gsl_multifit_fdfsolver_getx = __callback.gsl_multifit_fdfsolver_getx

def gsl_multifit_fdfsolver_getf(s):
    return __callback.gsl_multifit_fdfsolver_getf(s)
gsl_multifit_fdfsolver_getf = __callback.gsl_multifit_fdfsolver_getf

def gsl_multifit_function_free(FREE):
    return __callback.gsl_multifit_function_free(FREE)
gsl_multifit_function_free = __callback.gsl_multifit_function_free

def gsl_multifit_function_free_fdf(FREE):
    return __callback.gsl_multifit_function_free_fdf(FREE)
gsl_multifit_function_free_fdf = __callback.gsl_multifit_function_free_fdf

def gsl_multifit_fdfsolver_getJ(s):
    return __callback.gsl_multifit_fdfsolver_getJ(s)
gsl_multifit_fdfsolver_getJ = __callback.gsl_multifit_fdfsolver_getJ

def gsl_multifit_fsolver_alloc(T, n, p):
    return __callback.gsl_multifit_fsolver_alloc(T, n, p)
gsl_multifit_fsolver_alloc = __callback.gsl_multifit_fsolver_alloc

def gsl_multifit_fsolver_free(s):
    return __callback.gsl_multifit_fsolver_free(s)
gsl_multifit_fsolver_free = __callback.gsl_multifit_fsolver_free

def gsl_multifit_fsolver_set(s, f, IN):
    return __callback.gsl_multifit_fsolver_set(s, f, IN)
gsl_multifit_fsolver_set = __callback.gsl_multifit_fsolver_set

def gsl_multifit_fsolver_iterate(s):
    return __callback.gsl_multifit_fsolver_iterate(s)
gsl_multifit_fsolver_iterate = __callback.gsl_multifit_fsolver_iterate

def gsl_multifit_fsolver_name(s):
    return __callback.gsl_multifit_fsolver_name(s)
gsl_multifit_fsolver_name = __callback.gsl_multifit_fsolver_name

def gsl_multifit_fsolver_position(s):
    return __callback.gsl_multifit_fsolver_position(s)
gsl_multifit_fsolver_position = __callback.gsl_multifit_fsolver_position

def gsl_multifit_fdfsolver_alloc(T, n, p):
    return __callback.gsl_multifit_fdfsolver_alloc(T, n, p)
gsl_multifit_fdfsolver_alloc = __callback.gsl_multifit_fdfsolver_alloc

def gsl_multifit_fdfsolver_set(s, fdf, IN):
    return __callback.gsl_multifit_fdfsolver_set(s, fdf, IN)
gsl_multifit_fdfsolver_set = __callback.gsl_multifit_fdfsolver_set

def gsl_multifit_fdfsolver_iterate(s):
    return __callback.gsl_multifit_fdfsolver_iterate(s)
gsl_multifit_fdfsolver_iterate = __callback.gsl_multifit_fdfsolver_iterate

def gsl_multifit_fdfsolver_free(s):
    return __callback.gsl_multifit_fdfsolver_free(s)
gsl_multifit_fdfsolver_free = __callback.gsl_multifit_fdfsolver_free

def gsl_multifit_fdfsolver_name(s):
    return __callback.gsl_multifit_fdfsolver_name(s)
gsl_multifit_fdfsolver_name = __callback.gsl_multifit_fdfsolver_name

def gsl_multifit_fdfsolver_position(s):
    return __callback.gsl_multifit_fdfsolver_position(s)
gsl_multifit_fdfsolver_position = __callback.gsl_multifit_fdfsolver_position

def gsl_multifit_test_delta(dx, x, epsabs, epsrel):
    return __callback.gsl_multifit_test_delta(dx, x, epsabs, epsrel)
gsl_multifit_test_delta = __callback.gsl_multifit_test_delta

def gsl_multifit_test_gradient(IN, epsabs):
    return __callback.gsl_multifit_test_gradient(IN, epsabs)
gsl_multifit_test_gradient = __callback.gsl_multifit_test_gradient

def gsl_integration_workspace_alloc(n):
    return __callback.gsl_integration_workspace_alloc(n)
gsl_integration_workspace_alloc = __callback.gsl_integration_workspace_alloc

def gsl_integration_workspace_free(w):
    return __callback.gsl_integration_workspace_free(w)
gsl_integration_workspace_free = __callback.gsl_integration_workspace_free

def gsl_integration_workspace_get_size(w):
    return __callback.gsl_integration_workspace_get_size(w)
gsl_integration_workspace_get_size = __callback.gsl_integration_workspace_get_size

def gsl_integration_qaws_table_alloc(alpha, beta, mu, nu):
    return __callback.gsl_integration_qaws_table_alloc(alpha, beta, mu, nu)
gsl_integration_qaws_table_alloc = __callback.gsl_integration_qaws_table_alloc

def gsl_integration_qaws_table_set(t, alpha, beta, mu, nu):
    return __callback.gsl_integration_qaws_table_set(t, alpha, beta, mu, nu)
gsl_integration_qaws_table_set = __callback.gsl_integration_qaws_table_set

def gsl_integration_qaws_table_free(t):
    return __callback.gsl_integration_qaws_table_free(t)
gsl_integration_qaws_table_free = __callback.gsl_integration_qaws_table_free

__callback.GSL_INTEG_COSINE_swigconstant(__callback)
GSL_INTEG_COSINE = __callback.GSL_INTEG_COSINE

__callback.GSL_INTEG_SINE_swigconstant(__callback)
GSL_INTEG_SINE = __callback.GSL_INTEG_SINE

def gsl_integration_qawo_table_alloc(omega, L, sine, n):
    return __callback.gsl_integration_qawo_table_alloc(omega, L, sine, n)
gsl_integration_qawo_table_alloc = __callback.gsl_integration_qawo_table_alloc

def gsl_integration_qawo_table_set(t, omega, L, sine):
    return __callback.gsl_integration_qawo_table_set(t, omega, L, sine)
gsl_integration_qawo_table_set = __callback.gsl_integration_qawo_table_set

def gsl_integration_qawo_table_set_length(t, L):
    return __callback.gsl_integration_qawo_table_set_length(t, L)
gsl_integration_qawo_table_set_length = __callback.gsl_integration_qawo_table_set_length

def gsl_integration_qawo_table_free(t):
    return __callback.gsl_integration_qawo_table_free(t)
gsl_integration_qawo_table_free = __callback.gsl_integration_qawo_table_free

__callback.GSL_INTEG_GAUSS15_swigconstant(__callback)
GSL_INTEG_GAUSS15 = __callback.GSL_INTEG_GAUSS15

__callback.GSL_INTEG_GAUSS21_swigconstant(__callback)
GSL_INTEG_GAUSS21 = __callback.GSL_INTEG_GAUSS21

__callback.GSL_INTEG_GAUSS31_swigconstant(__callback)
GSL_INTEG_GAUSS31 = __callback.GSL_INTEG_GAUSS31

__callback.GSL_INTEG_GAUSS41_swigconstant(__callback)
GSL_INTEG_GAUSS41 = __callback.GSL_INTEG_GAUSS41

__callback.GSL_INTEG_GAUSS51_swigconstant(__callback)
GSL_INTEG_GAUSS51 = __callback.GSL_INTEG_GAUSS51

__callback.GSL_INTEG_GAUSS61_swigconstant(__callback)
GSL_INTEG_GAUSS61 = __callback.GSL_INTEG_GAUSS61

def gsl_integration_qng(BUFFER, a, b, epsabs, epsrel):
    return __callback.gsl_integration_qng(BUFFER, a, b, epsabs, epsrel)
gsl_integration_qng = __callback.gsl_integration_qng

def gsl_integration_qag(BUFFER, a, b, epsabs, epsrel, limit, key, workspace):
    return __callback.gsl_integration_qag(BUFFER, a, b, epsabs, epsrel, limit, key, workspace)
gsl_integration_qag = __callback.gsl_integration_qag

def gsl_integration_qagi(BUFFER, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qagi(BUFFER, epsabs, epsrel, limit, workspace)
gsl_integration_qagi = __callback.gsl_integration_qagi

def gsl_integration_qagiu(BUFFER, a, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qagiu(BUFFER, a, epsabs, epsrel, limit, workspace)
gsl_integration_qagiu = __callback.gsl_integration_qagiu

def gsl_integration_qagil(BUFFER, b, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qagil(BUFFER, b, epsabs, epsrel, limit, workspace)
gsl_integration_qagil = __callback.gsl_integration_qagil

def gsl_integration_qags(BUFFER, a, b, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qags(BUFFER, a, b, epsabs, epsrel, limit, workspace)
gsl_integration_qags = __callback.gsl_integration_qags

def gsl_integration_qagp(BUFFER, pts, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qagp(BUFFER, pts, epsabs, epsrel, limit, workspace)
gsl_integration_qagp = __callback.gsl_integration_qagp

def gsl_integration_qawc(BUFFER, a, b, c, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qawc(BUFFER, a, b, c, epsabs, epsrel, limit, workspace)
gsl_integration_qawc = __callback.gsl_integration_qawc

def gsl_integration_qaws(BUFFER, a, b, t, epsabs, epsrel, limit, workspace):
    return __callback.gsl_integration_qaws(BUFFER, a, b, t, epsabs, epsrel, limit, workspace)
gsl_integration_qaws = __callback.gsl_integration_qaws

def gsl_integration_qawo(BUFFER, a, epsabs, epsrel, limit, workspace, wf):
    return __callback.gsl_integration_qawo(BUFFER, a, epsabs, epsrel, limit, workspace, wf)
gsl_integration_qawo = __callback.gsl_integration_qawo

def gsl_integration_qawf(BUFFER, a, epsabs, limit, workspace, cycle_workspace, wf):
    return __callback.gsl_integration_qawf(BUFFER, a, epsabs, limit, workspace, cycle_workspace, wf)
gsl_integration_qawf = __callback.gsl_integration_qawf

def gsl_cheb_alloc(order):
    return __callback.gsl_cheb_alloc(order)
gsl_cheb_alloc = __callback.gsl_cheb_alloc

def gsl_cheb_free(cs):
    return __callback.gsl_cheb_free(cs)
gsl_cheb_free = __callback.gsl_cheb_free

def gsl_cheb_init(cs, BUFFER, a, b):
    return __callback.gsl_cheb_init(cs, BUFFER, a, b)
gsl_cheb_init = __callback.gsl_cheb_init

def gsl_cheb_eval(cs, x):
    return __callback.gsl_cheb_eval(cs, x)
gsl_cheb_eval = __callback.gsl_cheb_eval

def gsl_cheb_eval_err(cs, x):
    return __callback.gsl_cheb_eval_err(cs, x)
gsl_cheb_eval_err = __callback.gsl_cheb_eval_err

def gsl_cheb_eval_n(cs, order, x):
    return __callback.gsl_cheb_eval_n(cs, order, x)
gsl_cheb_eval_n = __callback.gsl_cheb_eval_n

def gsl_cheb_eval_n_err(cs, order, x):
    return __callback.gsl_cheb_eval_n_err(cs, order, x)
gsl_cheb_eval_n_err = __callback.gsl_cheb_eval_n_err

def gsl_cheb_calc_deriv(deriv, cs):
    return __callback.gsl_cheb_calc_deriv(deriv, cs)
gsl_cheb_calc_deriv = __callback.gsl_cheb_calc_deriv

def gsl_cheb_calc_integ(integ, cs):
    return __callback.gsl_cheb_calc_integ(integ, cs)
gsl_cheb_calc_integ = __callback.gsl_cheb_calc_integ

def pygsl_cheb_get_coefficients(s):
    return __callback.pygsl_cheb_get_coefficients(s)
pygsl_cheb_get_coefficients = __callback.pygsl_cheb_get_coefficients

def pygsl_cheb_set_coefficients(s, IN):
    return __callback.pygsl_cheb_set_coefficients(s, IN)
pygsl_cheb_set_coefficients = __callback.pygsl_cheb_set_coefficients

def pygsl_cheb_get_a(s):
    return __callback.pygsl_cheb_get_a(s)
pygsl_cheb_get_a = __callback.pygsl_cheb_get_a

def pygsl_cheb_get_b(s):
    return __callback.pygsl_cheb_get_b(s)
pygsl_cheb_get_b = __callback.pygsl_cheb_get_b

def pygsl_cheb_set_a(s, a):
    return __callback.pygsl_cheb_set_a(s, a)
pygsl_cheb_set_a = __callback.pygsl_cheb_set_a

def pygsl_cheb_set_b(s, b):
    return __callback.pygsl_cheb_set_b(s, b)
pygsl_cheb_set_b = __callback.pygsl_cheb_set_b

def pygsl_cheb_get_order_sp(s):
    return __callback.pygsl_cheb_get_order_sp(s)
pygsl_cheb_get_order_sp = __callback.pygsl_cheb_get_order_sp

def pygsl_cheb_set_order_sp(s, sp):
    return __callback.pygsl_cheb_set_order_sp(s, sp)
pygsl_cheb_set_order_sp = __callback.pygsl_cheb_set_order_sp

def pygsl_cheb_get_f(s):
    return __callback.pygsl_cheb_get_f(s)
pygsl_cheb_get_f = __callback.pygsl_cheb_get_f

def pygsl_cheb_set_f(s, f):
    return __callback.pygsl_cheb_set_f(s, f)
pygsl_cheb_set_f = __callback.pygsl_cheb_set_f

def gsl_odeiv_step_alloc(T, dim):
    return __callback.gsl_odeiv_step_alloc(T, dim)
gsl_odeiv_step_alloc = __callback.gsl_odeiv_step_alloc

def gsl_odeiv_step_reset(s):
    return __callback.gsl_odeiv_step_reset(s)
gsl_odeiv_step_reset = __callback.gsl_odeiv_step_reset

def gsl_odeiv_step_free(s):
    return __callback.gsl_odeiv_step_free(s)
gsl_odeiv_step_free = __callback.gsl_odeiv_step_free

def gsl_odeiv_step_name(arg1):
    return __callback.gsl_odeiv_step_name(arg1)
gsl_odeiv_step_name = __callback.gsl_odeiv_step_name

def gsl_odeiv_step_order(s):
    return __callback.gsl_odeiv_step_order(s)
gsl_odeiv_step_order = __callback.gsl_odeiv_step_order

__callback.gsl_odeiv_hadj_dec_swigconstant(__callback)
gsl_odeiv_hadj_dec = __callback.gsl_odeiv_hadj_dec

__callback.gsl_odeiv_hadj_inc_swigconstant(__callback)
gsl_odeiv_hadj_inc = __callback.gsl_odeiv_hadj_inc

__callback.gsl_odeiv_hadj_nil_swigconstant(__callback)
gsl_odeiv_hadj_nil = __callback.gsl_odeiv_hadj_nil

def gsl_odeiv_control_alloc(T):
    return __callback.gsl_odeiv_control_alloc(T)
gsl_odeiv_control_alloc = __callback.gsl_odeiv_control_alloc

def gsl_odeiv_control_init(c, eps_abs, eps_rel, a_y, a_dydt):
    return __callback.gsl_odeiv_control_init(c, eps_abs, eps_rel, a_y, a_dydt)
gsl_odeiv_control_init = __callback.gsl_odeiv_control_init

def gsl_odeiv_control_free(c):
    return __callback.gsl_odeiv_control_free(c)
gsl_odeiv_control_free = __callback.gsl_odeiv_control_free

def gsl_odeiv_control_name(c):
    return __callback.gsl_odeiv_control_name(c)
gsl_odeiv_control_name = __callback.gsl_odeiv_control_name

def gsl_odeiv_control_standard_new(eps_abs, eps_rel, a_y, a_dydt):
    return __callback.gsl_odeiv_control_standard_new(eps_abs, eps_rel, a_y, a_dydt)
gsl_odeiv_control_standard_new = __callback.gsl_odeiv_control_standard_new

def gsl_odeiv_control_y_new(eps_abs, eps_rel):
    return __callback.gsl_odeiv_control_y_new(eps_abs, eps_rel)
gsl_odeiv_control_y_new = __callback.gsl_odeiv_control_y_new

def gsl_odeiv_control_yp_new(eps_abs, eps_rel):
    return __callback.gsl_odeiv_control_yp_new(eps_abs, eps_rel)
gsl_odeiv_control_yp_new = __callback.gsl_odeiv_control_yp_new

def gsl_odeiv_evolve_alloc(dim):
    return __callback.gsl_odeiv_evolve_alloc(dim)
gsl_odeiv_evolve_alloc = __callback.gsl_odeiv_evolve_alloc

def gsl_odeiv_evolve_reset(arg1):
    return __callback.gsl_odeiv_evolve_reset(arg1)
gsl_odeiv_evolve_reset = __callback.gsl_odeiv_evolve_reset

def gsl_odeiv_evolve_free(arg1):
    return __callback.gsl_odeiv_evolve_free(arg1)
gsl_odeiv_evolve_free = __callback.gsl_odeiv_evolve_free

def gsl_multifit_linear_alloc(n, p):
    return __callback.gsl_multifit_linear_alloc(n, p)
gsl_multifit_linear_alloc = __callback.gsl_multifit_linear_alloc

def gsl_multifit_linear_free(work):
    return __callback.gsl_multifit_linear_free(work)
gsl_multifit_linear_free = __callback.gsl_multifit_linear_free

def gsl_multifit_linear(IN_AND_SIZE, IN, work_provide):
    return __callback.gsl_multifit_linear(IN_AND_SIZE, IN, work_provide)
gsl_multifit_linear = __callback.gsl_multifit_linear

def gsl_multifit_wlinear(IN_AND_SIZE, w, y, work_provide):
    return __callback.gsl_multifit_wlinear(IN_AND_SIZE, w, y, work_provide)
gsl_multifit_wlinear = __callback.gsl_multifit_wlinear

def gsl_multifit_wlinear_svd(IN_AND_SIZE, w, y, TOL, work_provide):
    return __callback.gsl_multifit_wlinear_svd(IN_AND_SIZE, w, y, TOL, work_provide)
gsl_multifit_wlinear_svd = __callback.gsl_multifit_wlinear_svd

def gsl_multifit_linear_est(x, c, IN):
    return __callback.gsl_multifit_linear_est(x, c, IN)
gsl_multifit_linear_est = __callback.gsl_multifit_linear_est

def gsl_multifit_linear_est_matrix(x, c, cov):
    return __callback.gsl_multifit_linear_est_matrix(x, c, cov)
gsl_multifit_linear_est_matrix = __callback.gsl_multifit_linear_est_matrix

def pygsl_multifit_linear_residuals(X, y, c):
    return __callback.pygsl_multifit_linear_residuals(X, y, c)
pygsl_multifit_linear_residuals = __callback.pygsl_multifit_linear_residuals

def gsl_fit_linear(x, y):
    return __callback.gsl_fit_linear(x, y)
gsl_fit_linear = __callback.gsl_fit_linear

def gsl_fit_wlinear(x, w, y):
    return __callback.gsl_fit_wlinear(x, w, y)
gsl_fit_wlinear = __callback.gsl_fit_wlinear

def gsl_fit_linear_est(x, c0, c1, c00, c01, c11):
    return __callback.gsl_fit_linear_est(x, c0, c1, c00, c01, c11)
gsl_fit_linear_est = __callback.gsl_fit_linear_est

def gsl_fit_mul(x, y):
    return __callback.gsl_fit_mul(x, y)
gsl_fit_mul = __callback.gsl_fit_mul

def gsl_fit_wmul(x, w, y):
    return __callback.gsl_fit_wmul(x, w, y)
gsl_fit_wmul = __callback.gsl_fit_wmul

def gsl_fit_mul_est(x, c1, c11):
    return __callback.gsl_fit_mul_est(x, c1, c11)
gsl_fit_mul_est = __callback.gsl_fit_mul_est
# This file is compatible with both classic and new-style classes.

cvar = __callback.cvar
gsl_root_fsolver_bisection = cvar.gsl_root_fsolver_bisection
gsl_root_fsolver_brent = cvar.gsl_root_fsolver_brent
gsl_root_fsolver_falsepos = cvar.gsl_root_fsolver_falsepos
gsl_root_fdfsolver_newton = cvar.gsl_root_fdfsolver_newton
gsl_root_fdfsolver_secant = cvar.gsl_root_fdfsolver_secant
gsl_root_fdfsolver_steffenson = cvar.gsl_root_fdfsolver_steffenson
gsl_min_fminimizer_goldensection = cvar.gsl_min_fminimizer_goldensection
gsl_min_fminimizer_brent = cvar.gsl_min_fminimizer_brent
gsl_multiroot_fsolver_dnewton = cvar.gsl_multiroot_fsolver_dnewton
gsl_multiroot_fsolver_broyden = cvar.gsl_multiroot_fsolver_broyden
gsl_multiroot_fsolver_hybrid = cvar.gsl_multiroot_fsolver_hybrid
gsl_multiroot_fsolver_hybrids = cvar.gsl_multiroot_fsolver_hybrids
gsl_multiroot_fdfsolver_newton = cvar.gsl_multiroot_fdfsolver_newton
gsl_multiroot_fdfsolver_gnewton = cvar.gsl_multiroot_fdfsolver_gnewton
gsl_multiroot_fdfsolver_hybridj = cvar.gsl_multiroot_fdfsolver_hybridj
gsl_multiroot_fdfsolver_hybridsj = cvar.gsl_multiroot_fdfsolver_hybridsj
gsl_multimin_fdfminimizer_steepest_descent = cvar.gsl_multimin_fdfminimizer_steepest_descent
gsl_multimin_fdfminimizer_conjugate_pr = cvar.gsl_multimin_fdfminimizer_conjugate_pr
gsl_multimin_fdfminimizer_conjugate_fr = cvar.gsl_multimin_fdfminimizer_conjugate_fr
gsl_multimin_fdfminimizer_vector_bfgs = cvar.gsl_multimin_fdfminimizer_vector_bfgs
gsl_multimin_fminimizer_nmsimplex = cvar.gsl_multimin_fminimizer_nmsimplex
gsl_multimin_fminimizer_nmsimplex2 = cvar.gsl_multimin_fminimizer_nmsimplex2
gsl_multimin_fminimizer_nmsimplex2rand = cvar.gsl_multimin_fminimizer_nmsimplex2rand
gsl_multimin_fdfminimizer_vector_bfgs2 = cvar.gsl_multimin_fdfminimizer_vector_bfgs2
gsl_multifit_gradient = __callback.gsl_multifit_gradient
gsl_multifit_covar = __callback.gsl_multifit_covar
gsl_multifit_fdfsolver_lmder = cvar.gsl_multifit_fdfsolver_lmder
gsl_multifit_fdfsolver_lmsder = cvar.gsl_multifit_fdfsolver_lmsder
gsl_multifit_fdfsolver_lmniel = cvar.gsl_multifit_fdfsolver_lmniel
gsl_odeiv_step_rk2 = cvar.gsl_odeiv_step_rk2
gsl_odeiv_step_rk4 = cvar.gsl_odeiv_step_rk4
gsl_odeiv_step_rkf45 = cvar.gsl_odeiv_step_rkf45
gsl_odeiv_step_rkck = cvar.gsl_odeiv_step_rkck
gsl_odeiv_step_rk8pd = cvar.gsl_odeiv_step_rk8pd
gsl_odeiv_step_rk2imp = cvar.gsl_odeiv_step_rk2imp
gsl_odeiv_step_rk4imp = cvar.gsl_odeiv_step_rk4imp
gsl_odeiv_step_bsimp = cvar.gsl_odeiv_step_bsimp
gsl_odeiv_step_gear1 = cvar.gsl_odeiv_step_gear1
gsl_odeiv_step_gear2 = cvar.gsl_odeiv_step_gear2
gsl_odeiv_step_apply = __callback.gsl_odeiv_step_apply
gsl_odeiv_control_hadjust = __callback.gsl_odeiv_control_hadjust
gsl_odeiv_evolve_apply = __callback.gsl_odeiv_evolve_apply
gsl_odeiv_evolve_apply_vector = __callback.gsl_odeiv_evolve_apply_vector

